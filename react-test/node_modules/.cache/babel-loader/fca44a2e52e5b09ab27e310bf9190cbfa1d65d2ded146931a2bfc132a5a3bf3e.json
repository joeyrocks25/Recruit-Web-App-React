{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\NewJobListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { postJobListing } from '../api/jobs';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobListing = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [description, setDescription] = useState('');\n  const {\n    user\n  } = useAuth();\n  const handlePostJobListing = async () => {\n    try {\n      if (!user) {\n        console.error('User not logged in.');\n        return;\n      }\n      const response = await postJobListing(user.id, {\n        Title: title,\n        Company: company,\n        Description: description,\n        LikesCount: 0,\n        DislikesCount: 0\n      });\n      console.log('Job Listing posted successfully:', response);\n      // You can add additional logic or redirect the user after posting the job listing\n    } catch (error) {\n      console.error('Error posting job listing:', error);\n      // Handle errors or display a user-friendly message\n    }\n  };\n\n  const containerStyle = {\n    maxWidth: '400px',\n    margin: '0 auto',\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)'\n  };\n  const labelStyle = {\n    fontWeight: 'bold',\n    marginBottom: '8px',\n    display: 'block'\n  };\n  const inputStyle = {\n    width: '100%',\n    padding: '8px',\n    boxSizing: 'border-box'\n  };\n  const textareaStyle = {\n    width: '100%',\n    padding: '8px',\n    boxSizing: 'border-box',\n    minHeight: '100px' // Set a minimum height for the textarea\n  };\n\n  const buttonStyle = {\n    backgroundColor: '#4caf50',\n    color: 'white',\n    padding: '10px',\n    border: 'none',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Welcome to Job Posting Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'grid',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        style: labelStyle,\n        children: \"Job Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"company\",\n        style: labelStyle,\n        children: \"Company:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"company\",\n        value: company,\n        onChange: e => setCompany(e.target.value),\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        style: labelStyle,\n        children: \"Job Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: textareaStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePostJobListing,\n        style: buttonStyle,\n        children: \"Post Job Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobListing, \"DV23R2OYFCmRyAjxW2XFuqTafDg=\", false, function () {\n  return [useAuth];\n});\n_c = NewJobListing;\nexport default NewJobListing;\nvar _c;\n$RefreshReg$(_c, \"NewJobListing\");","map":{"version":3,"names":["React","useState","postJobListing","useAuth","jsxDEV","_jsxDEV","NewJobListing","_s","title","setTitle","company","setCompany","description","setDescription","user","handlePostJobListing","console","error","response","id","Title","Company","Description","LikesCount","DislikesCount","log","containerStyle","maxWidth","margin","padding","border","borderRadius","boxShadow","labelStyle","fontWeight","marginBottom","display","inputStyle","width","boxSizing","textareaStyle","minHeight","buttonStyle","backgroundColor","color","cursor","style","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","gap","htmlFor","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/NewJobListing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { postJobListing } from '../api/jobs';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst NewJobListing = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  const handlePostJobListing = async () => {\r\n    try {\r\n      if (!user) {\r\n        console.error('User not logged in.');\r\n        return;\r\n      }\r\n\r\n      const response = await postJobListing(user.id, {\r\n        Title: title,\r\n        Company: company,\r\n        Description: description,\r\n        LikesCount: 0,\r\n        DislikesCount: 0,\r\n      });\r\n\r\n      console.log('Job Listing posted successfully:', response);\r\n      // You can add additional logic or redirect the user after posting the job listing\r\n    } catch (error) {\r\n      console.error('Error posting job listing:', error);\r\n      // Handle errors or display a user-friendly message\r\n    }\r\n  };\r\n\r\n  const containerStyle = {\r\n    maxWidth: '400px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n  };\r\n\r\n  const labelStyle = {\r\n    fontWeight: 'bold',\r\n    marginBottom: '8px',\r\n    display: 'block',\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '8px',\r\n    boxSizing: 'border-box',\r\n  };\r\n\r\n  const textareaStyle = {\r\n    width: '100%',\r\n    padding: '8px',\r\n    boxSizing: 'border-box',\r\n    minHeight: '100px', // Set a minimum height for the textarea\r\n  };\r\n\r\n  const buttonStyle = {\r\n    backgroundColor: '#4caf50',\r\n    color: 'white',\r\n    padding: '10px',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <h1 style={{ textAlign: 'center' }}>Welcome to Job Posting Page</h1>\r\n      <form style={{ display: 'grid', gap: '10px' }}>\r\n        <label htmlFor=\"title\" style={labelStyle}>Job Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n\r\n        <label htmlFor=\"company\" style={labelStyle}>Company:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"company\"\r\n          value={company}\r\n          onChange={(e) => setCompany(e.target.value)}\r\n          style={inputStyle}\r\n        />\r\n\r\n        <label htmlFor=\"description\" style={labelStyle}>Job Description:</label>\r\n        <textarea\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          style={textareaStyle}\r\n        />\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={handlePostJobListing}\r\n          style={buttonStyle}\r\n        >\r\n          Post Job Listing\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewJobListing;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}