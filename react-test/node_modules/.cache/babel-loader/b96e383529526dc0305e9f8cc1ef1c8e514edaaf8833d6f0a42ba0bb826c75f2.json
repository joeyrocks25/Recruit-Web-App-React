{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\EditDetails.js\",\n  _s = $RefreshSig$();\n// UserProfile.jsx\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogicAppAPI = 'https://prod-04.uksouth.logic.azure.com:443/workflows/eee57e98e2974fe78e4576d5b2662762/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nw56HtR2sYXhX_wdTuaH8gcnmBkMOYRyWF6bZQu_9_s';\nconst base64Decode = base64String => {\n  const binaryString = window.atob(base64String);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  const blob = new Blob([bytes], {\n    type: 'image/jpeg'\n  });\n  return URL.createObjectURL(blob);\n};\nconst UserProfile = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    if (user) {\n      fetchUserData(user.id);\n    }\n  }, [user]);\n  const fetchUserData = async userId => {\n    try {\n      const response = await axios.get(`${LogicAppAPI}&userId=${userId}`);\n      console.log('API Response:', response);\n      if (response.data && response.data.value) {\n        const userDataArray = response.data.value;\n        if (userDataArray.length > 0) {\n          // Take the first item in the array as the user data\n          const userData = userDataArray[0];\n\n          // Parse the JSON string in userData.data\n          const userDataObject = JSON.parse(userData.data);\n\n          // Extract username, password, and email\n          const {\n            username,\n            password,\n            email\n          } = userDataObject;\n\n          // Now you can use username, password, and email as needed\n          console.log('Username:', username);\n          console.log('Password:', password);\n          console.log('Email:', email);\n          setUserData(userData);\n        } else {\n          console.error('Error: Empty user data array');\n        }\n      } else {\n        console.error('Error: Invalid response format');\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", userData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), userData.filelocation && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: base64Decode(userData.filelocation),\n        alt: \"Profile Photo\",\n        style: {\n          width: '150px',\n          height: '150px',\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"OVONO7Do2kCXbDWyekXBf7UBFkM=\", false, function () {\n  return [useAuth];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","LogicAppAPI","base64Decode","base64String","binaryString","window","atob","bytes","Uint8Array","length","i","charCodeAt","blob","Blob","type","URL","createObjectURL","UserProfile","_s","user","userData","setUserData","fetchUserData","id","userId","response","get","console","log","data","value","userDataArray","userDataObject","JSON","parse","username","password","email","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filelocation","src","alt","style","width","height","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/EditDetails.js"],"sourcesContent":["// UserProfile.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst LogicAppAPI =\r\n  'https://prod-04.uksouth.logic.azure.com:443/workflows/eee57e98e2974fe78e4576d5b2662762/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=nw56HtR2sYXhX_wdTuaH8gcnmBkMOYRyWF6bZQu_9_s';\r\n\r\nconst base64Decode = (base64String) => {\r\n  const binaryString = window.atob(base64String);\r\n  const bytes = new Uint8Array(binaryString.length);\r\n  for (let i = 0; i < binaryString.length; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n  const blob = new Blob([bytes], { type: 'image/jpeg' });\r\n  return URL.createObjectURL(blob);\r\n};\r\n\r\nconst UserProfile = () => {\r\n  const { user } = useAuth();\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchUserData(user.id);\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchUserData = async (userId) => {\r\n    try {\r\n      const response = await axios.get(`${LogicAppAPI}&userId=${userId}`);\r\n      console.log('API Response:', response);\r\n  \r\n      if (response.data && response.data.value) {\r\n        const userDataArray = response.data.value;\r\n  \r\n        if (userDataArray.length > 0) {\r\n          // Take the first item in the array as the user data\r\n          const userData = userDataArray[0];\r\n  \r\n          // Parse the JSON string in userData.data\r\n          const userDataObject = JSON.parse(userData.data);\r\n  \r\n          // Extract username, password, and email\r\n          const { username, password, email } = userDataObject;\r\n  \r\n          // Now you can use username, password, and email as needed\r\n          console.log('Username:', username);\r\n          console.log('Password:', password);\r\n          console.log('Email:', email);\r\n  \r\n          setUserData(userData);\r\n        } else {\r\n          console.error('Error: Empty user data array');\r\n        }\r\n      } else {\r\n        console.error('Error: Invalid response format');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error.message);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>User Profile</h1>\r\n      {userData && (\r\n        <div>\r\n          <p>Email: {userData.email}</p>\r\n          <p>Username: {userData.username}</p>\r\n          {/* Display user's profile photo */}\r\n          {userData.filelocation && (\r\n            <img\r\n              src={base64Decode(userData.filelocation)}\r\n              alt=\"Profile Photo\"\r\n              style={{ width: '150px', height: '150px', borderRadius: '50%' }}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}