{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\NewJobListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobListing = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [description, setDescription] = useState('');\n  const handlePostJobListing = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/job-listings', {\n        Title: title,\n        Company: company,\n        Description: description\n      });\n      console.log('Job Listing posted successfully:', response.data);\n      // You can add additional logic or redirect the user after posting the job listing\n    } catch (error) {\n      console.error('Error posting job listing:', error.response.data);\n      // Handle errors or display a user-friendly message\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Job Posting Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          value: company,\n          onChange: e => setCompany(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Job Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePostJobListing,\n        children: \"Post Job Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n            div {\n              max-width: 400px;\n              margin: 0 auto;\n            }\n  \n            h1 {\n              text-align: center;\n            }\n  \n            form {\n              display: flex;\n              flex-direction: column;\n              gap: 10px;\n            }\n  \n            label {\n              font-weight: bold;\n            }\n  \n            input, textarea {\n              width: 100%;\n              padding: 8px;\n              box-sizing: border-box;\n            }\n  \n            button {\n              background-color: #4caf50;\n              color: white;\n              padding: 10px;\n              border: none;\n              cursor: pointer;\n            }\n  \n            button:hover {\n              background-color: #45a049;\n            }\n          `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobListing, \"nw7zIRAMlG89+mHLCbsJ6Fruv9E=\");\n_c = NewJobListing;\nexport default NewJobListing;\nvar _c;\n$RefreshReg$(_c, \"NewJobListing\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewJobListing","_s","title","setTitle","company","setCompany","description","setDescription","handlePostJobListing","response","post","Title","Company","Description","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/NewJobListing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NewJobListing = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handlePostJobListing = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/job-listings', {\r\n        Title: title,\r\n        Company: company,\r\n        Description: description,\r\n      });\r\n\r\n      console.log('Job Listing posted successfully:', response.data);\r\n      // You can add additional logic or redirect the user after posting the job listing\r\n    } catch (error) {\r\n      console.error('Error posting job listing:', error.response.data);\r\n      // Handle errors or display a user-friendly message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Job Posting Page</h1>\r\n      <form>\r\n        <div>\r\n          <label htmlFor=\"title\">Job Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"company\">Company:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"company\"\r\n            value={company}\r\n            onChange={(e) => setCompany(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\">Job Description:</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={handlePostJobListing}>\r\n          Post Job Listing\r\n        </button>\r\n      </form>\r\n\r\n          {/* CSS Styles */}\r\n          <style>\r\n          {`\r\n            div {\r\n              max-width: 400px;\r\n              margin: 0 auto;\r\n            }\r\n  \r\n            h1 {\r\n              text-align: center;\r\n            }\r\n  \r\n            form {\r\n              display: flex;\r\n              flex-direction: column;\r\n              gap: 10px;\r\n            }\r\n  \r\n            label {\r\n              font-weight: bold;\r\n            }\r\n  \r\n            input, textarea {\r\n              width: 100%;\r\n              padding: 8px;\r\n              box-sizing: border-box;\r\n            }\r\n  \r\n            button {\r\n              background-color: #4caf50;\r\n              color: white;\r\n              padding: 10px;\r\n              border: none;\r\n              cursor: pointer;\r\n            }\r\n  \r\n            button:hover {\r\n              background-color: #45a049;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default NewJobListing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}