{"ast":null,"code":"// AuthService.js\nclass AuthService {\n  static isAuthenticated() {\n    return localStorage.getItem('authToken') !== null;\n  }\n  static login(username, password) {\n    // In a real-world scenario, you would send a request to the server to get a token.\n    // For simplicity, we'll use a fake token.\n    const fakeToken = 'fakeToken';\n    localStorage.setItem('authToken', fakeToken);\n  }\n  static logout() {\n    localStorage.removeItem('authToken');\n  }\n}\nexport default AuthService;","map":{"version":3,"names":["AuthService","isAuthenticated","localStorage","getItem","login","username","password","fakeToken","setItem","logout","removeItem"],"sources":["C:/Users/kpfb2/react-test/src/context/AuthService.js"],"sourcesContent":["// AuthService.js\r\nclass AuthService {\r\n  static isAuthenticated() {\r\n    return localStorage.getItem('authToken') !== null;\r\n  }\r\n\r\n  static login(username, password) {\r\n    // In a real-world scenario, you would send a request to the server to get a token.\r\n    // For simplicity, we'll use a fake token.\r\n    const fakeToken = 'fakeToken';\r\n    localStorage.setItem('authToken', fakeToken);\r\n  }\r\n\r\n  static logout() {\r\n    localStorage.removeItem('authToken');\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,CAAC;EAChB,OAAOC,eAAeA,CAAA,EAAG;IACvB,OAAOC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI;EACnD;EAEA,OAAOC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IAC/B;IACA;IACA,MAAMC,SAAS,GAAG,WAAW;IAC7BL,YAAY,CAACM,OAAO,CAAC,WAAW,EAAED,SAAS,CAAC;EAC9C;EAEA,OAAOE,MAAMA,CAAA,EAAG;IACdP,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;EACtC;AACF;AAEA,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}