{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\MyResume.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyResume = () => {\n  _s();\n  const [resume, setResume] = useState(null);\n  const [video, setVideo] = useState(null);\n  const [audio, setAudio] = useState(null);\n\n  // Callback to handle when files are dropped\n  const onDrop = useCallback(files => {\n    // Handle the uploaded files\n    console.log('Accepted Files:', files);\n\n    // Group files by type\n    const groupedFiles = files.reduce((acc, file) => {\n      const fileType = getFileType(file);\n      return {\n        ...acc,\n        [fileType]: file\n      };\n    }, {});\n\n    // Set state based on file type\n    if (groupedFiles.pdf) {\n      setResume(groupedFiles.pdf);\n    }\n    if (groupedFiles.mp4 || groupedFiles.mov) {\n      setVideo(groupedFiles.mp4 || groupedFiles.mov);\n    }\n    if (groupedFiles.mp3 || groupedFiles.wav) {\n      setAudio(groupedFiles.mp3 || groupedFiles.wav);\n    }\n  }, []);\n\n  // Function to get file type based on extension\n  const getFileType = file => {\n    const extensions = {\n      pdf: ['pdf'],\n      video: ['mp4', 'mov'],\n      audio: ['mp3', 'wav']\n    };\n    const extension = file.name.split('.').pop();\n    for (const type in extensions) {\n      if (extensions[type].includes(extension)) {\n        return type;\n      }\n    }\n    return 'unknown';\n  };\n\n  // Initialize the dropzone\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  // Log when the component renders\n  console.log('MyResume Component Rendered');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Media Upload Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      style: dropzoneStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), resume && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resume:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: resume.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), video && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), audio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Audio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: audio.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n// Styling for the dropzone area\n_s(MyResume, \"9sOzPwmSKoPDoHpsg93umO5yOlI=\", false, function () {\n  return [useDropzone];\n});\n_c = MyResume;\nconst dropzoneStyle = {\n  border: '2px dashed #cccccc',\n  borderRadius: '4px',\n  padding: '20px',\n  textAlign: 'center',\n  cursor: 'pointer',\n  margin: '20px 0'\n};\nexport default MyResume;\nvar _c;\n$RefreshReg$(_c, \"MyResume\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","MyResume","_s","resume","setResume","video","setVideo","audio","setAudio","onDrop","files","console","log","groupedFiles","reduce","acc","file","fileType","getFileType","pdf","mp4","mov","mp3","wav","extensions","extension","name","split","pop","type","includes","getRootProps","getInputProps","isDragActive","children","fileName","_jsxFileName","lineNumber","columnNumber","style","dropzoneStyle","_c","border","borderRadius","padding","textAlign","cursor","margin","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/MyResume.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst MyResume = () => {\r\n  const [resume, setResume] = useState(null);\r\n  const [video, setVideo] = useState(null);\r\n  const [audio, setAudio] = useState(null);\r\n\r\n  // Callback to handle when files are dropped\r\n  const onDrop = useCallback((files) => {\r\n    // Handle the uploaded files\r\n    console.log('Accepted Files:', files);\r\n\r\n    // Group files by type\r\n    const groupedFiles = files.reduce((acc, file) => {\r\n      const fileType = getFileType(file);\r\n      return {\r\n        ...acc,\r\n        [fileType]: file,\r\n      };\r\n    }, {});\r\n\r\n    // Set state based on file type\r\n    if (groupedFiles.pdf) {\r\n      setResume(groupedFiles.pdf);\r\n    }\r\n    if (groupedFiles.mp4 || groupedFiles.mov) {\r\n      setVideo(groupedFiles.mp4 || groupedFiles.mov);\r\n    }\r\n    if (groupedFiles.mp3 || groupedFiles.wav) {\r\n      setAudio(groupedFiles.mp3 || groupedFiles.wav);\r\n    }\r\n  }, []);\r\n\r\n  // Function to get file type based on extension\r\n  const getFileType = (file) => {\r\n    const extensions = {\r\n      pdf: ['pdf'],\r\n      video: ['mp4', 'mov'],\r\n      audio: ['mp3', 'wav'],\r\n    };\r\n\r\n    const extension = file.name.split('.').pop();\r\n    for (const type in extensions) {\r\n      if (extensions[type].includes(extension)) {\r\n        return type;\r\n      }\r\n    }\r\n    return 'unknown';\r\n  };\r\n\r\n  // Initialize the dropzone\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  // Log when the component renders\r\n  console.log('MyResume Component Rendered');\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Media Upload Page</h1>\r\n      {/* Dropzone area */}\r\n      <div {...getRootProps()} style={dropzoneStyle}>\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <p>Drop the files here ...</p>\r\n        ) : (\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        )}\r\n      </div>\r\n      {/* Display the accepted files */}\r\n      {resume && (\r\n        <div>\r\n          <h2>Resume:</h2>\r\n          <p>{resume.name}</p>\r\n        </div>\r\n      )}\r\n      {video && (\r\n        <div>\r\n          <h2>Video:</h2>\r\n          <p>{video.name}</p>\r\n        </div>\r\n      )}\r\n      {audio && (\r\n        <div>\r\n          <h2>Audio:</h2>\r\n          <p>{audio.name}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styling for the dropzone area\r\nconst dropzoneStyle = {\r\n  border: '2px dashed #cccccc',\r\n  borderRadius: '4px',\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  cursor: 'pointer',\r\n  margin: '20px 0',\r\n};\r\n\r\nexport default MyResume;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}