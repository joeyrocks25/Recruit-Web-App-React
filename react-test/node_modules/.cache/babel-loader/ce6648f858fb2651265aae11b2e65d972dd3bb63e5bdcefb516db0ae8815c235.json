{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\react-test\\\\src\\\\Pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/Pages/Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [loginError, setLoginError] = useState(false);\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Simulating authentication logic with hardcoded credentials\n    const formData = new FormData(e.target);\n    if (formData.get('username') === 'username' && formData.get('password') === 'password') {\n      setLoginError(false);\n      login(); // Update the login state using the context\n      navigate('/Test'); // Navigate to the Test page after successful login\n    } else {\n      setLoginError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Incorrect username or password. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WdIB7JkVhlmC6ExqCuC20Lv/1aI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Login","_s","loginError","setLoginError","login","navigate","handleSubmit","e","preventDefault","formData","FormData","target","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/react-test/src/Pages/Login.js"],"sourcesContent":["// src/Pages/Login.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Login = () => {\r\n  const [loginError, setLoginError] = useState(false);\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Simulating authentication logic with hardcoded credentials\r\n    const formData = new FormData(e.target);\r\n    if (formData.get('username') === 'username' && formData.get('password') === 'password') {\r\n      setLoginError(false);\r\n      login(); // Update the login state using the context\r\n      navigate('/Test'); // Navigate to the Test page after successful login\r\n    } else {\r\n      setLoginError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Username:\r\n          <input type=\"text\" name=\"username\" />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" name=\"password\" />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {loginError && <p>Incorrect username or password. Please try again.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM;IAAES;EAAM,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC3B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACvC,IAAIF,QAAQ,CAACG,GAAG,CAAC,UAAU,CAAC,KAAK,UAAU,IAAIH,QAAQ,CAACG,GAAG,CAAC,UAAU,CAAC,KAAK,UAAU,EAAE;MACtFT,aAAa,CAAC,KAAK,CAAC;MACpBC,KAAK,CAAC,CAAC,CAAC,CAAC;MACTC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLF,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKc,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBf,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnB,OAAA;MAAMoB,QAAQ,EAAEb,YAAa;MAAAQ,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,GAAO,WAEL,eAAAf,OAAA;UAAOqB,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACRnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnB,OAAA;QAAAe,QAAA,GAAO,WAEL,eAAAf,OAAA;UAAOqB,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACRnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNnB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACNhB,UAAU,iBAAIH,OAAA;MAAAe,QAAA,EAAG;IAAiD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCID,KAAK;EAAA,QAESH,OAAO,EACRD,WAAW;AAAA;AAAA0B,EAAA,GAHxBtB,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}