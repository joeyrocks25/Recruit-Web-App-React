{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: 'john_doe',\n    email: 'user@example.com',\n    password: 'password123',\n    profileImage: null // Set the file later during testing\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Create FormData object to send as multipart/form-data\n      const formDataForBackend = new FormData();\n      formDataForBackend.append('username', formData.username);\n      formDataForBackend.append('email', formData.email);\n      formDataForBackend.append('password', formData.password);\n\n      // Append the image file separately\n      formDataForBackend.append('profileImage', formData.profileImage, 'profile-photo.png');\n\n      // Log the FormData for inspection\n      console.log('FormData:', formDataForBackend);\n\n      // Simulate a successful response for testing\n      const simulatedResponse = {\n        CreatedAt: '2023-11-30T17:26:45.200Z',\n        email: 'user@example.com',\n        filelocation: 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzY5NjIwMDUwODE2MjA1',\n        filename: 'profile-photo.png',\n        filepath: '/userprofilescontainer/638369620050816205',\n        id: 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzY5NjIwMDUwODE2MjA1',\n        password: 'password123',\n        username: 'john_doe'\n      };\n      const formattedResult = {\n        CreatedAt: simulatedResponse.CreatedAt,\n        email: simulatedResponse.email,\n        filelocation: simulatedResponse.filelocation,\n        filename: formData.profileImage.name,\n        filepath: simulatedResponse.filepath,\n        id: simulatedResponse.id,\n        password: simulatedResponse.password,\n        username: simulatedResponse.username\n      };\n      console.log('Registration successful:', formattedResult);\n    } catch (error) {\n      console.error('Registration error:', error.message);\n    }\n  };\n  const handleFileChange = e => {\n    // For testing purposes, you can use the same file\n    setFormData({\n      ...formData,\n      profileImage: e.target.files[0]\n    });\n  };\n  useEffect(() => {\n    console.log('Register component mounted!');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Profile Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"profileImage\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"OdQ81ZSSGlWBK5bJJzUF87BEHnE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","profileImage","handleSubmit","e","preventDefault","formDataForBackend","FormData","append","console","log","simulatedResponse","CreatedAt","filelocation","filename","filepath","id","formattedResult","name","error","message","handleFileChange","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","type","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: 'john_doe',\r\n    email: 'user@example.com',\r\n    password: 'password123',\r\n    profileImage: null, // Set the file later during testing\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Create FormData object to send as multipart/form-data\r\n      const formDataForBackend = new FormData();\r\n      formDataForBackend.append('username', formData.username);\r\n      formDataForBackend.append('email', formData.email);\r\n      formDataForBackend.append('password', formData.password);\r\n\r\n      // Append the image file separately\r\n      formDataForBackend.append('profileImage', formData.profileImage, 'profile-photo.png');\r\n\r\n      // Log the FormData for inspection\r\n      console.log('FormData:', formDataForBackend);\r\n\r\n      // Simulate a successful response for testing\r\n      const simulatedResponse = {\r\n        CreatedAt: '2023-11-30T17:26:45.200Z',\r\n        email: 'user@example.com',\r\n        filelocation: 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzY5NjIwMDUwODE2MjA1',\r\n        filename: 'profile-photo.png',\r\n        filepath: '/userprofilescontainer/638369620050816205',\r\n        id: 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzY5NjIwMDUwODE2MjA1',\r\n        password: 'password123',\r\n        username: 'john_doe',\r\n      };\r\n\r\n      const formattedResult = {\r\n        CreatedAt: simulatedResponse.CreatedAt,\r\n        email: simulatedResponse.email,\r\n        filelocation: simulatedResponse.filelocation,\r\n        filename: formData.profileImage.name,\r\n        filepath: simulatedResponse.filepath,\r\n        id: simulatedResponse.id,\r\n        password: simulatedResponse.password,\r\n        username: simulatedResponse.username,\r\n      };\r\n\r\n      console.log('Registration successful:', formattedResult);\r\n    } catch (error) {\r\n      console.error('Registration error:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    // For testing purposes, you can use the same file\r\n    setFormData({ ...formData, profileImage: e.target.files[0] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Register component mounted!');\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <label>\r\n          Username:\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n        </label>\r\n        {/* Other input fields go here */}\r\n        <label>\r\n          Profile Image:\r\n          <input type=\"file\" name=\"profileImage\" onChange={handleFileChange} />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}