{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\MyResume.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and components\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { useAuth } from '../hooks/useAuth';\nimport { v4 as uuidv4 } from 'uuid';\n\n// MyResume component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyResume = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [mediaFile, setMediaFile] = useState(null);\n  const onDrop = useCallback(async files => {\n    const mediaID = uuidv4();\n    const supportedFile = files.find(file => getFileType(file) === 'pdf' || getFileType(file) === 'video' || getFileType(file) === 'audio');\n    console.log('Accepted File:', supportedFile);\n    if (supportedFile) {\n      setMediaFile(supportedFile);\n    }\n  }, []);\n  const getFileType = file => {\n    const extensions = {\n      pdf: ['pdf'],\n      video: ['mp4', 'mov'],\n      audio: ['mp3', 'wav']\n    };\n    const extension = file.name.split('.').pop();\n    for (const type in extensions) {\n      if (extensions[type].includes(extension)) {\n        return type;\n      }\n    }\n    return 'unknown';\n  };\n  const readFileContent = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const base64Content = event.target.result.split(',')[1];\n        resolve(base64Content);\n      };\n      reader.onerror = error => {\n        reject(error);\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const uploadFiles = async (userId, mediaID, file) => {\n    try {\n      const fileType = getFileType(file);\n      const response = await axios.post('https://functionappuserresumes.azurewebsites.net/api/HttpTrigger1?code=4yHlqEo_Erqm96LWxMTJCxwYPtIfAwSkT2DWm9PY6trBAzFuf6rb3Q==', {\n        userId,\n        mediaID,\n        file: {\n          [fileType]: {\n            content: await readFileContent(file)\n          }\n        }\n      });\n      console.log('Upload successful:', response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error.message);\n    }\n  };\n  const {\n    getRootProps: mediaRootProps,\n    getInputProps: mediaInputProps,\n    isDragActive: isMediaDragActive\n  } = useDropzone({\n    onDrop\n  });\n  const handleAddResume = () => {\n    const userId = user ? user.id : null;\n    if (userId && mediaFile) {\n      uploadFiles(userId, uuidv4(), mediaFile);\n    }\n  };\n  const dropzoneStyle = {\n    border: '2px dashed #cccccc',\n    borderRadius: '4px',\n    padding: '20px',\n    textAlign: 'center',\n    cursor: 'pointer',\n    margin: '20px 0'\n  };\n  console.log('MyResume Component Rendered');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Media Upload Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Media (PDF, MP4, or MP3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...mediaRootProps(),\n        style: dropzoneStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...mediaInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), isMediaDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drop the media file here ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop your media file here, or click to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), mediaFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Accepted Media File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: mediaFile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddResume,\n      children: \"Add Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(MyResume, \"/IBjgFE8Ujtg+B/3qc4DqM0b8Uc=\", false, function () {\n  return [useAuth, useDropzone];\n});\n_c = MyResume;\nexport default MyResume;\nvar _c;\n$RefreshReg$(_c, \"MyResume\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","axios","useAuth","v4","uuidv4","jsxDEV","_jsxDEV","MyResume","_s","user","mediaFile","setMediaFile","onDrop","files","mediaID","supportedFile","find","file","getFileType","console","log","extensions","pdf","video","audio","extension","name","split","pop","type","includes","readFileContent","Promise","resolve","reject","reader","FileReader","onload","event","base64Content","target","result","onerror","error","readAsDataURL","uploadFiles","userId","fileType","response","post","content","data","message","getRootProps","mediaRootProps","getInputProps","mediaInputProps","isDragActive","isMediaDragActive","handleAddResume","id","dropzoneStyle","border","borderRadius","padding","textAlign","cursor","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/MyResume.js"],"sourcesContent":["// Import necessary libraries and components\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// MyResume component\r\nconst MyResume = () => {\r\n  const { user } = useAuth();\r\n  const [mediaFile, setMediaFile] = useState(null);\r\n\r\n  const onDrop = useCallback(async (files) => {\r\n    const mediaID = uuidv4();\r\n\r\n    const supportedFile = files.find(\r\n      (file) =>\r\n        getFileType(file) === 'pdf' ||\r\n        getFileType(file) === 'video' ||\r\n        getFileType(file) === 'audio'\r\n    );\r\n\r\n    console.log('Accepted File:', supportedFile);\r\n\r\n    if (supportedFile) {\r\n      setMediaFile(supportedFile);\r\n    }\r\n  }, []);\r\n\r\n  const getFileType = (file) => {\r\n    const extensions = {\r\n      pdf: ['pdf'],\r\n      video: ['mp4', 'mov'],\r\n      audio: ['mp3', 'wav'],\r\n    };\r\n\r\n    const extension = file.name.split('.').pop();\r\n    for (const type in extensions) {\r\n      if (extensions[type].includes(extension)) {\r\n        return type;\r\n      }\r\n    }\r\n    return 'unknown';\r\n  };\r\n\r\n  const readFileContent = async (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const base64Content = event.target.result.split(',')[1];\r\n        resolve(base64Content);\r\n      };\r\n      reader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const uploadFiles = async (userId, mediaID, file) => {\r\n    try {\r\n      const fileType = getFileType(file);\r\n\r\n      const response = await axios.post(\r\n        'https://functionappuserresumes.azurewebsites.net/api/HttpTrigger1?code=4yHlqEo_Erqm96LWxMTJCxwYPtIfAwSkT2DWm9PY6trBAzFuf6rb3Q==',\r\n        {\r\n          userId,\r\n          mediaID,\r\n          file: {\r\n            [fileType]: {\r\n              content: await readFileContent(file),\r\n            },\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log('Upload successful:', response.data);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error.message);\r\n    }\r\n  };\r\n\r\n  const { getRootProps: mediaRootProps, getInputProps: mediaInputProps, isDragActive: isMediaDragActive } = useDropzone({ onDrop });\r\n\r\n  const handleAddResume = () => {\r\n    const userId = user ? user.id : null;\r\n    if (userId && mediaFile) {\r\n      uploadFiles(userId, uuidv4(), mediaFile);\r\n    }\r\n  };\r\n\r\n  const dropzoneStyle = {\r\n    border: '2px dashed #cccccc',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    margin: '20px 0',\r\n  };\r\n\r\n  console.log('MyResume Component Rendered');\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Media Upload Page</h1>\r\n\r\n      <div>\r\n        <h2>Upload Your Media (PDF, MP4, or MP3)</h2>\r\n        <div {...mediaRootProps()} style={dropzoneStyle}>\r\n          <input {...mediaInputProps()} />\r\n          {isMediaDragActive ? (\r\n            <p>Drop the media file here ...</p>\r\n          ) : (\r\n            <p>Drag 'n' drop your media file here, or click to select a file</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {mediaFile && (\r\n        <div>\r\n          <h3>Accepted Media File:</h3>\r\n          <p>{mediaFile.name}</p>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleAddResume}>Add Resume</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyResume;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}