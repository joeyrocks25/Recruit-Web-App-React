{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    profileImage: null\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('https://prod-05.uksouth.logic.azure.com:443/workflows/5e4c364ae4644ee49c285f8aa5a819c5/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rhsJCcaNO7LNYR1kgYUSbgop1XpTbfbAG3hpgR0azvQ', {\n        method: 'POST',\n        body: formData.profileImage,\n        // Just send the file directly\n        headers: {\n          'Content-Type': formData.profileImage.type\n          // Include other headers if needed\n        }\n      });\n\n      const result = await response.json();\n      const formattedResult = {\n        CreatedAt: result.CreatedAt,\n        email: result.email,\n        filelocation: result.filelocation,\n        filename: formData.profileImage.name,\n        // Use the original filename\n        filepath: result.filepath,\n        id: result.id,\n        password: result.password,\n        username: result.username\n      };\n      console.log('Registration successful:', formattedResult);\n    } catch (error) {\n      console.error('Registration error:', error.message);\n    }\n  };\n  const handleFileChange = e => {\n    setFormData({\n      ...formData,\n      profileImage: e.target.files[0]\n    });\n  };\n  useEffect(() => {\n    console.log('Register component mounted!');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Profile Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"profileImage\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"0t1gLGAzwbHqcixGg9DZ+/6jfx8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","profileImage","handleSubmit","e","preventDefault","response","fetch","method","body","headers","type","result","json","formattedResult","CreatedAt","filelocation","filename","name","filepath","id","console","log","error","message","handleFileChange","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    profileImage: null,\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        'https://prod-05.uksouth.logic.azure.com:443/workflows/5e4c364ae4644ee49c285f8aa5a819c5/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rhsJCcaNO7LNYR1kgYUSbgop1XpTbfbAG3hpgR0azvQ',\r\n        {\r\n          method: 'POST',\r\n          body: formData.profileImage, // Just send the file directly\r\n          headers: {\r\n            'Content-Type': formData.profileImage.type,\r\n            // Include other headers if needed\r\n          },\r\n        }\r\n      );\r\n\r\n      const result = await response.json();\r\n\r\n      const formattedResult = {\r\n        CreatedAt: result.CreatedAt,\r\n        email: result.email,\r\n        filelocation: result.filelocation,\r\n        filename: formData.profileImage.name, // Use the original filename\r\n        filepath: result.filepath,\r\n        id: result.id,\r\n        password: result.password,\r\n        username: result.username,\r\n      };\r\n\r\n      console.log('Registration successful:', formattedResult);\r\n    } catch (error) {\r\n      console.error('Registration error:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData({ ...formData, profileImage: e.target.files[0] });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Register component mounted!');\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <label>\r\n          Username:\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={(e) => setFormData({ ...formData, username: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          />\r\n        </label>\r\n        <label>\r\n          Profile Image:\r\n          <input type=\"file\" name=\"profileImage\" onChange={handleFileChange} />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}