{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp2\\\\RecruitApp2\\\\react-test\\\\src\\\\Pages\\\\MediaUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaUpload = () => {\n  _s();\n  const [acceptedFiles, setAcceptedFiles] = useState([]);\n\n  // Callback to handle when files are dropped\n  const onDrop = useCallback(files => {\n    // Handle the uploaded files\n    console.log('Accepted Files:', files);\n    setAcceptedFiles(files);\n    // You can perform additional actions like uploading to a server or storing in state\n  }, []);\n\n  // Initialize the dropzone\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n\n  // Log when the component renders\n  console.log('MediaUpload Component Rendered');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Media Upload Pageeeee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      style: dropzoneStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), acceptedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Accepted Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n// Styling for the dropzone area\n_s(MediaUpload, \"orYEVbSdJ3HwTO//pgLZrQcbOwE=\", false, function () {\n  return [useDropzone];\n});\n_c = MediaUpload;\nconst dropzoneStyle = {\n  border: '2px dashed #cccccc',\n  borderRadius: '4px',\n  padding: '20px',\n  textAlign: 'center',\n  cursor: 'pointer',\n  margin: '20px 0'\n};\nexport default MediaUpload;\nvar _c;\n$RefreshReg$(_c, \"MediaUpload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","MediaUpload","_s","acceptedFiles","setAcceptedFiles","onDrop","files","console","log","getRootProps","getInputProps","isDragActive","children","fileName","_jsxFileName","lineNumber","columnNumber","style","dropzoneStyle","length","map","file","name","_c","border","borderRadius","padding","textAlign","cursor","margin","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp2/RecruitApp2/react-test/src/Pages/MediaUpload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst MediaUpload = () => {\r\n  const [acceptedFiles, setAcceptedFiles] = useState([]);\r\n\r\n  // Callback to handle when files are dropped\r\n  const onDrop = useCallback((files) => {\r\n    // Handle the uploaded files\r\n    console.log('Accepted Files:', files);\r\n    setAcceptedFiles(files);\r\n    // You can perform additional actions like uploading to a server or storing in state\r\n  }, []);\r\n\r\n  // Initialize the dropzone\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  // Log when the component renders\r\n  console.log('MediaUpload Component Rendered');\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Media Upload Pageeeee</h1>\r\n      {/* Dropzone area */}\r\n      <div {...getRootProps()} style={dropzoneStyle}>\r\n        <input {...getInputProps()} />\r\n        {isDragActive ? (\r\n          <p>Drop the files here ...</p>\r\n        ) : (\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        )}\r\n      </div>\r\n      {/* Display the accepted files */}\r\n      {acceptedFiles.length > 0 && (\r\n        <div>\r\n          <h2>Accepted Files:</h2>\r\n          <ul>\r\n            {acceptedFiles.map((file) => (\r\n              <li key={file.name}>{file.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styling for the dropzone area\r\nconst dropzoneStyle = {\r\n  border: '2px dashed #cccccc',\r\n  borderRadius: '4px',\r\n  padding: '20px',\r\n  textAlign: 'center',\r\n  cursor: 'pointer',\r\n  margin: '20px 0',\r\n};\r\n\r\nexport default MediaUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMQ,MAAM,GAAGT,WAAW,CAAEU,KAAK,IAAK;IACpC;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACrCF,gBAAgB,CAACE,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM;IAAEG,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGb,WAAW,CAAC;IAAEO;EAAO,CAAC,CAAC;;EAE7E;EACAE,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAE7C,oBACER,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzChB,OAAA;MAAA,GAASS,YAAY,CAAC,CAAC;MAAEQ,KAAK,EAAEC,aAAc;MAAAN,QAAA,gBAC5CZ,OAAA;QAAA,GAAWU,aAAa,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC7BL,YAAY,gBACXX,OAAA;QAAAY,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE9BhB,OAAA;QAAAY,QAAA,EAAG;MAAuD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELb,aAAa,CAACgB,MAAM,GAAG,CAAC,iBACvBnB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhB,OAAA;QAAAY,QAAA,EACGT,aAAa,CAACiB,GAAG,CAAEC,IAAI,iBACtBrB,OAAA;UAAAY,QAAA,EAAqBS,IAAI,CAACC;QAAI,GAArBD,IAAI,CAACC,IAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAd,EAAA,CA5CMD,WAAW;EAAA,QAYuCH,WAAW;AAAA;AAAAyB,EAAA,GAZ7DtB,WAAW;AA6CjB,MAAMiB,aAAa,GAAG;EACpBM,MAAM,EAAE,oBAAoB;EAC5BC,YAAY,EAAE,KAAK;EACnBC,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE,QAAQ;EACnBC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE;AACV,CAAC;AAED,eAAe5B,WAAW;AAAC,IAAAsB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}