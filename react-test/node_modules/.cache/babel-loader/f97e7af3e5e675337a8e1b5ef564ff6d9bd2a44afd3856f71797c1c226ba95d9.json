{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\DisplayResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayResume = () => {\n  _s();\n  const userId = 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzcxNjc0MzA1ODY1NDUx'; // Replace with the actual user ID\n  const functionUri = 'https://functionappuserresumes.azurewebsites.net/api/HttpTriggerGetResume?code=3xBINMjx9M_ybw4gII-HTDCL5ejk46kuzkfwebsa1gMpAzFu5xSR0w==';\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await fetch(`${functionUri}&userId=${userId}`);\n        if (!response.ok) {\n          throw new Error(`Error fetching files: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setFiles(data.files);\n      } catch (error) {\n        console.error('Error:', error.message);\n      }\n    };\n    fetchFiles();\n  }, [userId, functionUri]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: files.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: getFileTitle(file.fileName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Name: \", file.fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: `File-${index}`,\n        src: `data:${file.contentType};base64,${file.content}`,\n        width: \"100%\",\n        height: \"500px\",\n        style: {\n          border: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayResume, \"Q2RYUcr07MgGv5yVCV31YurpQrA=\");\n_c = DisplayResume;\nexport default DisplayResume;\n\n// Helper function to determine the title based on file name\nfunction getFileTitle(fileName) {\n  const extension = fileName.split('.').pop().toLowerCase();\n  switch (extension) {\n    case 'pdf':\n      return 'My Resume';\n    case 'mp4':\n      return 'My Personal Video';\n    case 'mp3':\n      return 'My Aspirations';\n    default:\n      return 'File';\n    // Default title if type is unknown\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"DisplayResume\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DisplayResume","_s","userId","functionUri","files","setFiles","fetchFiles","response","fetch","ok","Error","statusText","data","json","error","console","message","children","length","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","getFileTitle","title","src","contentType","content","width","height","style","border","_c","extension","split","pop","toLowerCase","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/DisplayResume.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DisplayResume = () => {\r\n  const userId = 'JTJmdXNlcnByb2ZpbGVzY29udGFpbmVyJTJmNjM4MzcxNjc0MzA1ODY1NDUx'; // Replace with the actual user ID\r\n  const functionUri = 'https://functionappuserresumes.azurewebsites.net/api/HttpTriggerGetResume?code=3xBINMjx9M_ybw4gII-HTDCL5ejk46kuzkfwebsa1gMpAzFu5xSR0w==';\r\n\r\n  const [files, setFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await fetch(`${functionUri}&userId=${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching files: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setFiles(data.files);\r\n      } catch (error) {\r\n        console.error('Error:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, [userId, functionUri]);\r\n\r\n  return (\r\n    <div>\r\n      {files.length === 0 ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        files.map((file, index) => (\r\n          <div key={index}>\r\n            <h2>{getFileTitle(file.fileName)}</h2>\r\n            <p>File Name: {file.fileName}</p>\r\n            <iframe\r\n              title={`File-${index}`}\r\n              src={`data:${file.contentType};base64,${file.content}`}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n              style={{ border: 'none' }}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayResume;\r\n\r\n// Helper function to determine the title based on file name\r\nfunction getFileTitle(fileName) {\r\n  const extension = fileName.split('.').pop().toLowerCase();\r\n  switch (extension) {\r\n    case 'pdf':\r\n      return 'My Resume';\r\n    case 'mp4':\r\n      return 'My Personal Video';\r\n    case 'mp3':\r\n      return 'My Aspirations';\r\n    default:\r\n      return 'File'; // Default title if type is unknown\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}