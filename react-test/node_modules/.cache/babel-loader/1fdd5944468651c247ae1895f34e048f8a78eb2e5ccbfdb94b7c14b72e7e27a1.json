{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpfb2\\\\repositories\\\\RecruitApp\\\\react-test\\\\src\\\\Pages\\\\NewJobListing.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewJobListing = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [description, setDescription] = useState('');\n  const handlePostJobListing = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/job-listings', {\n        Title: title,\n        Company: company,\n        Description: description\n      });\n      console.log('Job Listing posted successfully:', response.data);\n      // You can add additional logic or redirect the user after posting the job listing\n    } catch (error) {\n      console.error('Error posting job listing:', error.response.data);\n      // Handle errors or display a user-friendly message\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Welcome to Job Posting Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"company\",\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          style: {\n            fontWeight: 'bold'\n          },\n          children: \"Job Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handlePostJobListing,\n        style: {\n          backgroundColor: '#4caf50',\n          color: 'white',\n          padding: '10px',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Post Job Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(NewJobListing, \"nw7zIRAMlG89+mHLCbsJ6Fruv9E=\");\n_c = NewJobListing;\nexport default NewJobListing;\nvar _c;\n$RefreshReg$(_c, \"NewJobListing\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewJobListing","_s","title","setTitle","company","setCompany","description","setDescription","handlePostJobListing","response","post","Title","Company","Description","console","log","data","error","style","maxWidth","margin","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","htmlFor","fontWeight","type","id","value","onChange","e","target","width","padding","boxSizing","onClick","backgroundColor","color","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/kpfb2/repositories/RecruitApp/react-test/src/Pages/NewJobListing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NewJobListing = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handlePostJobListing = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/job-listings', {\r\n        Title: title,\r\n        Company: company,\r\n        Description: description,\r\n      });\r\n\r\n      console.log('Job Listing posted successfully:', response.data);\r\n      // You can add additional logic or redirect the user after posting the job listing\r\n    } catch (error) {\r\n      console.error('Error posting job listing:', error.response.data);\r\n      // Handle errors or display a user-friendly message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n      <h1 style={{ textAlign: 'center' }}>Welcome to Job Posting Page</h1>\r\n      <form style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\r\n        <div>\r\n          <label htmlFor=\"title\" style={{ fontWeight: 'bold' }}>Job Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"company\" style={{ fontWeight: 'bold' }}>Company:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"company\"\r\n            value={company}\r\n            onChange={(e) => setCompany(e.target.value)}\r\n            style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"description\" style={{ fontWeight: 'bold' }}>Job Description:</label>\r\n          <textarea\r\n            id=\"description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handlePostJobListing}\r\n          style={{\r\n            backgroundColor: '#4caf50',\r\n            color: 'white',\r\n            padding: '10px',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Post Job Listing\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewJobListing;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}